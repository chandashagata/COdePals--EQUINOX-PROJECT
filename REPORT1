from tkinter import*
from tkinter import ttk,messagebox
import sqlite3
class ReportClass:
    def __init__(self,root):
        self.root=root
        self.root.title("STUDENT RESULT MANAGEMENT SYSTEM")
        self.root.geometry("1350x700+0+0")
        self.root.config(bg="#FFFF72")
        self.root.config(bg="light grey")
        self.root.focus_force()

        #_______Title______
        title=Label(self.root,text="ADD STUDENT RESULTS",padx=10,compound="left",font=("groudy old style",20,"bold"),bg="orange",fg="#262626").place(x=0,y=0,width=1480,height=50)
        #_______________search______________________
        self.var_search=StringVar()
        self.var_id=""
        lbl_select=Label(self.root,text="Serch by roll no",font=("goudy old style ",20,"bold"),bg="white").place(x=280,y=100)
        txt_search=Entry(self.root,textvariable=self.variable"Serch by roll no",font=("goudy old style ",20,"bold"),bg="white").place(x=520,y=100,width =150)
        btn_search=Button(self.root,text='Search',font=("goudy old style",15,"bold"),bg="#3a9f4",fg="white",cursor="hand2",command=self.search).place(x=680,y=100,width=120,height=35)
        btn_clear=Button(self.root,text='clear',font=("goudy old style",15,"bold"),bg="#3a9f4",fg="gray",cursor="hand2",command=self.clear).place(x=680,y=100,width=120,height=35)
        
    
       #__________result_labels____________
       lbl_roll=label(self.root,text="Roll No",font=("goudy old style",15,"bold"),bg="white",bd=2,relief=GROOVE).place(x=150,y=230,width=150,height=50)
       lbl_name=label(self.root,text="Name",font=("goudy old style",15,"bold"),bg="white",bd=2,relief=GROOVE).place(x=300,y=230,width=150,height=50)
       lbl_course=label(self.root,text="Course",font=("goudy old style",15,"bold"),bg="white",bd=2,relief=GROOVE).place(x=450,y=230,width=150,height=50)
       lbl_marks=label(self.root,text="Marks Obtained",font=("goudy old style",15,"bold"),bg="white",bd=2,relief=GROOVE).place(x=600,y=230,width=150,height=50)
       lbl_full=label(self.root,text="Total Marks",font=("goudy old style",15,"bold"),bg="white",bd=2,relief=GROOVE).place(x=150,y=750,width=150,height=50)
       lbl_per=label(self.root,text="percentage",font=("goudy old style",15,"bold"),bg="white",bd=2,relief=GROOVE).place(x=150,y=900,width=150,height=50)
       
       
       
       self.roll=label(self.root,font=("goudy old style",15,"bold"),bg="white",bd=2,relief=GROOVE).place(x=150,y=230,width=150,height=50)
       self.roll.place(x=150,y=280,width=150,height=50)
       self_name=label(self.root,font=("goudy old style",15,"bold"),bg="white",bd=2,relief=GROOVE).place(x=300,y=230,width=150,height=50)
       self.name.place(x=300,y=280,width=150,height=50)
       self.course=label(self.root,font=("goudy old style",15,"bold"),bg="white",bd=2,relief=GROOVE).place(x=450,y=230,width=150,height=50)
       self.course.place(x=450,y=280,width=150,height=50)
       self.marks=label(self.root,text="Marks Obtained",font=("goudy old style",15,"bold"),bg="white",bd=2,relief=GROOVE).place(x=600,y=230,width=150,height=50)
       self.marks.place(x=600,y=280,width=150,height=50)
       self.full=label(self.root,text="Total Marks",font=("goudy old style",15,"bold"),bg="white",bd=2,relief=GROOVE).place(x=150,y=750,width=150,height=50)
       self.full.space(x=750,y=280,width=150,height=50)
       self.per=label(self.root,text="percentage",font=("goudy old style",15,"bold"),bg="white",bd=2,relief=GROOVE).place(x=150,y=900,width=150,height=50)
       self.per.place(x=900,y=280,width=150,height=50)
       
       #___________button_delete__________
       btn_delete=Button(self.root,text='delete',font=("goudy old style",15,"bold"),bg="red",fg="gray",cursor="hand2",command=self.delete).place(x=500,y=150,width=150,height=35)
        
       #_______________________________________________
       def search(self):
        con=sqlite3.connect(database="rms.db")
        cur=con.cursor()
        try:
            if self.var_search.get()=="":
                messagebox.showerror("Error","Roll No. should be required",parent=self.root)
            else:
                cur.execute(f"select * from result where roll =?",{self.var_search.get()}%'")
                rows=cur.fetchall()
                #print(row)
                if row!=None:
                self.var_id=row[0]
                    self.roll.config(row[1])
                    self.name.config(row[2])
                    self.course.config(row[3])
                    self.marks.config(row[4])
                    self.full.config(row[5])
                    self.per.config(row[6])
            else:
                messagebox.showerror("Error","No recoed found",parent=self.root)
        except Exception as ex:
            messagebox.showerror("Error",f"Error due to {str(ex)}")  
            
            
    def clear(self):
        self.var_id=""
        self.roll.config(text="")
        self.name.config(text="")
        self.course.config(text="")
        self.marks.config(text="")
        self.full.config(text="")
        self.per.config.set( "") 
        
        
    def delete(self):
        con=sqlite3.connect(database="rms.db")
        cur=con.cursor()
        try:
            if self.var_id=="":
                messagebox.showerror("Error","search student result first",parent=self.root)
        else:
            cur.execute("select * from result where rid=?",(self.var_id,))
            row=cur.fetchone()
            if row==None:
                messagebox.showerror("Error","Invalid Student Result",parent=self.root)
            else:
                op=messagebox.askyesno("Confirm","Do you really want to delete?",parent=self.root)
                if op==True:
                    cur.execute("delete from result where rid=?",(self.var_id,))
                    con.commit()
                    messagebox.showinfo("Delete","Deleted Successfully",parent=self.root)
                    self.show()
        except Exception as ex:
            messagebox.showerror("Error",f"Error due to {str(ex)}")
 
           
       
       
       if __name__=="__main__":
        root=Tk()
        obj=ReportClass(root)
        root.mainloop() 
