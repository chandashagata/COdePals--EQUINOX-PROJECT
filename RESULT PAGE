from tkinter import*
from tkinter import ttk,messagebox
import sqlite3
class ResultClass:
    def __init__(self,root):
        self.root=root
        self.root.title("STUDENT RESULT MANAGEMENT SYSTEM")
        self.root.geometry("1350x700+0+0")
        self.root.config(bg="#FFFF72")
        self.root.config(bg="light grey")
        self.root.focus_force()

        #_______Title______
        title=Label(self.root,text="ADD STUDENT RESULTS",padx=10,compound="left",font=("groudy old style",20,"bold"),bg="orange",fg="#262626").place(x=0,y=0,width=1480,height=50)
        #________Widgets_________
        #________Variables_________
        self.var_roll=StringVar()
        self.var_name=StringVar()
        self.var_course=StringVar()
        self.var_marks=StringVar()
        self.var_full_marks=StringVar()
        self.roll_list=[]
        self.fetch_roll()
        
        
        
        lbl_select=Label(self.root,text="Select Student",font=("goudy old style ",20,"bold"),bg="white").place(x=50,y=100)
        lbl_name=Label(self.root,text="Name",font=("goudy old style",20,"bold"),bg="white").place(x=50,y=160)
        lbl_course=Label(self.root,text="Course",font=("goudy old style ",20,"bold"),bg="white").place(x=50,y=220)
        lbl_marks_ob=Label(self.root,text="Marks Obtained",font=("goudy old style ",20,"bold"),bg="white").place(x=50,y=280)
        lbl_full_marks=Label(self.root,text="Full Marks",font=("goudy old style ",20,"bold"),bg="white").place(x=50,y=340)
        
        self.txt_student=ttk.Combobox(self.root,textvariable=self.var_roll,values=self.roll_list,font=("goudy old style",15,'bold'),state='readonly'justify=CENTER)
        self.txt_student.place(x=280,y=100,width=200)
        self.txt_student.set("Select")
        btn_search=Button(self.root,text='Search',font=("goudy old style",15,"bold"),bg="#3a9f4",fg="white",cursor="hand2",command=self.search).place(x=500,y=100,width=120,height=28)
        
        
        txt_name=Entry(self.root,textvariable=self.var_name,font=("goudy old style",20,'bold'),bg="lightyellow",state="readonly").place(x=280,y=160,widht=320)
        txt_course=Entry(self.root,textvariable=self.var_course,font=("goudy old style",20,'bold'),bg="lightyellow",state="readonly").place(x=280,y=220,widht=320)
        txt_marks=Entry(self.root,textvariable=self.var_marks,font=("goudy old style",20,'bold'),bg="lightyellow").place(x=280,y=280,widht=320)
        txt_full_marks=Entry(self.root,textvariable=self.var_full_marks,font=("goudy old style",20,'bold'),bg="lightyellow").place(x=280,y=340,widht=320)


        #__________button________________
        btn_add=button(self.root,text="Submit",font+("times new roman",15),bg="lightgreen",activebackground="lightgreen",cursor="hand2").place(x=300,y=420,widht=120,height=35)
        btn_clear=button(self.root,text="Submit",font+("times new roman",15),bg="lightgreen",activebackground="lightgrey",cursor="hand2").place(x=430,y=420,widht=120,height=35)
        
    #_________________________________________________
    def fetch_roll(self):
        con=sqlite#.connect(database="rms")
        cur=con.cursor()
        try:
            cur.execute("select roll from student")
            rows=cur.fetchall()
            if len(rows)>0:
                self.course_list.append(row[0])
        except Exception as ex:
            messagebox.showerror("Error",f"error due to {str(ex)}")
    
    
    def search(self):
        con=sqlite3.connect(database="rms.db")
        cur=con.cursor()
        try:
            cur.execute(f"select name,course from course where name LIKE '%{self.var_roll.get()}%'")
            rows=cur.fetchall()
            #print(row)
            if row!=None:
                self.var_name.set(row[0])
                self.var_name.set(row[1])
            else:
                messagebox.showerror("Error","No recoed found",parent=self.root)
        except Exception as ex:
            messagebox.showerror("Error",f"Error due to {str(ex)}")    
                

    
    def add(self):
    con=sqlite3.connect(database="rms.db")
    cur=con.cursor()
    try:
        if self.var_name.get()=="":
            messagebox.showerror("Error","please first search student record",parent=self.root)
        else:
            cur.execute("select * from result where roll=? and course=?",(self.var_roll.get(),self.var_course.get()))
            row=cur.fetchone()
            if row!=None:
                messagebox.showerror("Error","Result already present",parent=self.root)
            else:
                per=(int(self.var_marks.get())*100)?int(self.var_full_marks.get())
                cur.execute("insert into result(roll,name,course,marks_ob,full_marks,per)values(?,?,?,?,?,?)",(
                    self.var_roll.get(),
                    self.var_name.get(),
                    self.var_course.get(),
                    self.var_marks.get(),
                    self.var_full_marks.get(),
                    str(per)
                ))
                con.commit()
                messagebox.showinfo("Success","result added successfully",parent=self.root)
                self.show()
    except Exception as ex:
        messagebox.showerror("Error",f"Error due to {str(ex)}")


        
        
if __name__=="__main__":
    root=Tk()
    obj=ResultClass(root)
    root.mainloop()       
